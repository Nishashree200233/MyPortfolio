{"ast":null,"code":"import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\r\n * Filters out events not attached to the primary pointer (currently left mouse button)\r\n * @param eventHandler\r\n */\nfunction filterPrimaryPointer(eventHandler) {\n  return event => {\n    const isMouseEvent = event instanceof MouseEvent;\n    const isPrimaryPointer = !isMouseEvent || isMouseEvent && event.button === 0;\n    if (isPrimaryPointer) {\n      eventHandler(event);\n    }\n  };\n}\nconst defaultPagePoint = {\n  pageX: 0,\n  pageY: 0\n};\nfunction pointFromTouch(e) {\n  let pointType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"page\";\n  const primaryTouch = e.touches[0] || e.changedTouches[0];\n  const point = primaryTouch || defaultPagePoint;\n  return {\n    x: point[pointType + \"X\"],\n    y: point[pointType + \"Y\"]\n  };\n}\nfunction pointFromMouse(point) {\n  let pointType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"page\";\n  return {\n    x: point[pointType + \"X\"],\n    y: point[pointType + \"Y\"]\n  };\n}\nfunction extractEventInfo(event) {\n  let pointType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"page\";\n  return {\n    point: isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)\n  };\n}\nconst wrapHandler = function (handler) {\n  let shouldFilterPrimaryPointer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const listener = event => handler(event, extractEventInfo(event));\n  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;\n};\nexport { extractEventInfo, wrapHandler };","map":{"version":3,"names":["isTouchEvent","filterPrimaryPointer","eventHandler","event","isMouseEvent","MouseEvent","isPrimaryPointer","button","defaultPagePoint","pageX","pageY","pointFromTouch","e","pointType","arguments","length","undefined","primaryTouch","touches","changedTouches","point","x","y","pointFromMouse","extractEventInfo","wrapHandler","handler","shouldFilterPrimaryPointer","listener"],"sources":["C:/Users/Nisha Shree/3dwebsite/MyPortfolio/node_modules/framer-motion/dist/es/events/event-info.mjs"],"sourcesContent":["import { isTouchEvent } from '../gestures/utils/event-type.mjs';\r\n\r\n/**\r\n * Filters out events not attached to the primary pointer (currently left mouse button)\r\n * @param eventHandler\r\n */\r\nfunction filterPrimaryPointer(eventHandler) {\r\n    return (event) => {\r\n        const isMouseEvent = event instanceof MouseEvent;\r\n        const isPrimaryPointer = !isMouseEvent ||\r\n            (isMouseEvent && event.button === 0);\r\n        if (isPrimaryPointer) {\r\n            eventHandler(event);\r\n        }\r\n    };\r\n}\r\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\r\nfunction pointFromTouch(e, pointType = \"page\") {\r\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\r\n    const point = primaryTouch || defaultPagePoint;\r\n    return {\r\n        x: point[pointType + \"X\"],\r\n        y: point[pointType + \"Y\"],\r\n    };\r\n}\r\nfunction pointFromMouse(point, pointType = \"page\") {\r\n    return {\r\n        x: point[pointType + \"X\"],\r\n        y: point[pointType + \"Y\"],\r\n    };\r\n}\r\nfunction extractEventInfo(event, pointType = \"page\") {\r\n    return {\r\n        point: isTouchEvent(event)\r\n            ? pointFromTouch(event, pointType)\r\n            : pointFromMouse(event, pointType),\r\n    };\r\n}\r\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\r\n    const listener = (event) => handler(event, extractEventInfo(event));\r\n    return shouldFilterPrimaryPointer\r\n        ? filterPrimaryPointer(listener)\r\n        : listener;\r\n};\r\n\r\nexport { extractEventInfo, wrapHandler };\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kCAAkC;;AAE/D;AACA;AACA;AACA;AACA,SAASC,oBAAoBA,CAACC,YAAY,EAAE;EACxC,OAAQC,KAAK,IAAK;IACd,MAAMC,YAAY,GAAGD,KAAK,YAAYE,UAAU;IAChD,MAAMC,gBAAgB,GAAG,CAACF,YAAY,IACjCA,YAAY,IAAID,KAAK,CAACI,MAAM,KAAK,CAAE;IACxC,IAAID,gBAAgB,EAAE;MAClBJ,YAAY,CAACC,KAAK,CAAC;IACvB;EACJ,CAAC;AACL;AACA,MAAMK,gBAAgB,GAAG;EAAEC,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAE,CAAC;AAC/C,SAASC,cAAcA,CAACC,CAAC,EAAsB;EAAA,IAApBC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,MAAM;EACzC,MAAMG,YAAY,GAAGL,CAAC,CAACM,OAAO,CAAC,CAAC,CAAC,IAAIN,CAAC,CAACO,cAAc,CAAC,CAAC,CAAC;EACxD,MAAMC,KAAK,GAAGH,YAAY,IAAIT,gBAAgB;EAC9C,OAAO;IACHa,CAAC,EAAED,KAAK,CAACP,SAAS,GAAG,GAAG,CAAC;IACzBS,CAAC,EAAEF,KAAK,CAACP,SAAS,GAAG,GAAG;EAC5B,CAAC;AACL;AACA,SAASU,cAAcA,CAACH,KAAK,EAAsB;EAAA,IAApBP,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,MAAM;EAC7C,OAAO;IACHO,CAAC,EAAED,KAAK,CAACP,SAAS,GAAG,GAAG,CAAC;IACzBS,CAAC,EAAEF,KAAK,CAACP,SAAS,GAAG,GAAG;EAC5B,CAAC;AACL;AACA,SAASW,gBAAgBA,CAACrB,KAAK,EAAsB;EAAA,IAApBU,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,MAAM;EAC/C,OAAO;IACHM,KAAK,EAAEpB,YAAY,CAACG,KAAK,CAAC,GACpBQ,cAAc,CAACR,KAAK,EAAEU,SAAS,CAAC,GAChCU,cAAc,CAACpB,KAAK,EAAEU,SAAS;EACzC,CAAC;AACL;AACA,MAAMY,WAAW,GAAG,SAAAA,CAACC,OAAO,EAAyC;EAAA,IAAvCC,0BAA0B,GAAAb,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAC5D,MAAMc,QAAQ,GAAIzB,KAAK,IAAKuB,OAAO,CAACvB,KAAK,EAAEqB,gBAAgB,CAACrB,KAAK,CAAC,CAAC;EACnE,OAAOwB,0BAA0B,GAC3B1B,oBAAoB,CAAC2B,QAAQ,CAAC,GAC9BA,QAAQ;AAClB,CAAC;AAED,SAASJ,gBAAgB,EAAEC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}